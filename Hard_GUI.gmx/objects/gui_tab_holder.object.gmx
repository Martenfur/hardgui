<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>gui_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()

w=256
h=512

tabScrollSpd=5

tabActive=  0
tabOffset_x=0
tabDrag=    0
tabDragDX=  0

tabDragDetectSensitivity=4
tabDragDetectDX=         0

/*
Tab name.
Tab length.
Tab form.
*/

draw_set_font(GUI_FONT)

tabs=ds_list_create()

gui_subbuttonInit()
gui_subbuttonCreate(0,0,GUI_SPACING_4X,GUI_SPACING_4X)
gui_subbuttonCreate(w-GUI_SPACING_4X,0,w,GUI_SPACING_4X)   



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var td_tab;
for(var td_i=0; td_i&lt;ds_list_size(tabs) td_i+=1)
{
  td_tab=tabs[|td_i]
  gui_formDestroy(td_tab[|2])
  ds_list_destroy(td_tab)  
}
ds_list_destroy(tabs)

gui_subbuttonListDestroy()


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SUBBUTTONS

//Width may vary. So we need to update second button.
gui_subbuttonUpdate(1,w-GUI_SPACING_4X,0,w,GUI_SPACING_4X) 
//Width may vary. So we need to update second button.


gui_subbuttonListUpdate()



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///MAIN TAB CODE

//GRAB
if gui_mouseCheckPress(myform,mb_left)
{
  if point_in_rectangle(mouseForm_x,mouseForm_y,x+GUI_SPACING_4X,y,x+w-GUI_SPACING_4X,y+GUI_SPACING_4X)
  {
    tabDragDX=mouseForm_x-x-tabOffset_x-GUI_SPACING_4X
    tabDragDetectDX=mouseForm_x-x
    
    tabDrag=1
  }
  else
  {tabDrag=0}
}
//GRAB

if tabDrag
{tabOffset_x=mouseForm_x-(x+GUI_SPACING_4X+tabDragDX)} //Drag.
else
{tabOffset_x+=tabScrollSpd*(gui_subbuttonCheck(0)-gui_subbuttonCheck(1))} //Arrows.

//DRAG RELEASE
if mouse_check_button_released(mb_left)
{tabDrag=0}
//DRAG RELEASE

//WHEEL SCROLLING
if !tabDrag &amp;&amp; !gui_subbuttonCheck(0) &amp;&amp; !gui_subbuttonCheck(1)
&amp;&amp; point_in_rectangle(mouseForm_x,mouseForm_y,x,y,x+w,y+GUI_SPACING_4X)
&amp;&amp; myform.clickable=1
{tabOffset_x+=tabScrollSpd*(mouse_wheel_down()-mouse_wheel_up())}
//WHEEL SCROLLING

//Getting summary length of all tabs.
var tabsL=0,
    tabCur;
for(var i=0; i&lt;ds_list_size(tabs) i+=1)
{
  tabCur=tabs[|i]
  tabsL+=tabCur[|1]
}
//Getting summary length of all tabs.  

//Drag borders.
if tabsL&lt;=w-GUI_SPACING_4X*2
{
  tabDrag=0
  tabOffset_x=0
}
else
{  
  if tabOffset_x&gt;0
  {tabOffset_x=0}
  if tabOffset_x+tabsL&lt;w-GUI_SPACING_4X*2
  {tabOffset_x=w-GUI_SPACING_4X*2-tabsL}
}
//Drag borders.




</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CLICK

if gui_mouseCheckRelease(myform,mb_left) 
&amp;&amp; abs(tabDragDetectDX+x-mouseForm_x)&lt;tabDragDetectSensitivity
&amp;&amp; point_in_rectangle(mouseForm_x,mouseForm_y,x,  y,
                                              x+w,y+GUI_SPACING_4X)    
{
  var tabsAm,tab_x;
  tabsAm=ds_list_size(tabs)
  tab_x=GUI_SPACING_4X
  for(var i=0; i&lt;tabsAm i+=1)
  {
    var tabCur=tabs[|i];  
    if point_in_rectangle(mouseForm_x,mouseForm_y,x+tab_x+tabOffset_x,           y,
                                                  x+tab_x+tabOffset_x+tabCur[|1],y+GUI_SPACING_4X)
    {
      tabActive=i
      break 
    }
    tab_x+=tabCur[|1]
  }
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gui_formSetTarget(myform)

draw_sprite_stretched_ext(s_pixel,0,x,y-1,w+1,h+2,GUI_C_DARK,1) //Base.

//BUTTONS//////////////////////////////////////////////////////////////
var cArrow,cBack;
if gui_subbuttonCheck(0)
{
  cArrow=GUI_C_DARK
  cBack= GUI_C_BRIGHT
}
else
{
  cArrow=GUI_C_BRIGHT
  cBack= GUI_C_DARK
}
draw_sprite_stretched_ext(s_pixel,0,round(x-1),round(y),GUI_SPACING_4X+1,GUI_SPACING_4X,cBack,1)
draw_sprite_ext(s_gui_arrow_medium,0,x,y+GUI_SPACING_4X,1,1,90,cArrow,1)

//

if gui_subbuttonCheck(1)
{
  cArrow=GUI_C_DARK
  cBack= GUI_C_BRIGHT
}
else
{
  cArrow=GUI_C_BRIGHT
  cBack= GUI_C_DARK
}
draw_sprite_stretched_ext(s_pixel,0,round(x+w-GUI_SPACING_4X),round(y),GUI_SPACING_4X+1,GUI_SPACING_4X,cBack,1)
draw_sprite_ext(s_gui_arrow_medium,0,x+w,y,1,1,-90,cArrow,1)
//BUTTONS//////////////////////////////////////////////////////////////

//TABS/////////////////////////////////////////////////////////////////
draw_set_color(GUI_C_BRIGHT)
draw_set_font(GUI_FONT)
draw_set_halign(fa_center)
draw_set_valign(fa_center)

var tab_x,tabsAm;
tab_x=GUI_SPACING_4X
tabsAm=ds_list_size(tabs)

scissorsSet(x+GUI_SPACING_4X,y,w-GUI_SPACING_4X*2,GUI_SPACING_4X)
for(var i=0; i&lt;tabsAm i+=1)
{
  var tabCur=tabs[|i];  
  draw_sprite_stretched_ext(s_pixel,0,round(x+tab_x+tabOffset_x),round(y)+1,tabCur[|1]-1,GUI_SPACING_4X-2+(tabActive==i),GUI_C_MEDIUM,1)
  draw_text(round(x+tab_x+tabOffset_x+tabCur[|1]/2),round(y+GUI_SPACING_4X/2),tabCur[|0])
   
  tab_x+=tabCur[|1]
  
  if i=tabActive
  {tabCur[|2].active=1}
  else
  {tabCur[|2].active=-1}
}
scissorsReset()


gui_formResetTarget(myform)

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
