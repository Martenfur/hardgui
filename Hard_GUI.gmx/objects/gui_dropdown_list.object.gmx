<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>gui_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()

w=128
h=GUI_SPACING_4X

listForm=noone
listActive=0
listSlider=noone
listSliderYadd=0

listButtonSelected=-1
listButtonPressed= -1

itemSelected=0
list=ds_list_create()

ds_list_add(list,"Suppiewwwwwww.")
ds_list_add(list,"Foxes.")
ds_list_add(list,"Are.")
repeat(50)
ds_list_add(list,"Gods.")
/*
myslider_h=gui_createSlider(GUI_SPACING_4X,myform.h-GUI_SPACING_4X,0,myform.w-GUI_SPACING_4X,myform.w*2,0,NOFORM)

x=myform.w
startx=myform.w

myslider_v=gui_createSlider(0,0,1,myform.h-GUI_SPACING_4X,myform.h*2,0,NOFORM)

y=myform.h
starty=myform.h
*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Activating.
if gui_mouseCheckRelease(myform,mb_left) 
{
  if point_in_rectangle(mouseForm_x,mouseForm_y,x,y,x+w,y+h)
  {listActive=!listActive}
  else
  {listActive=0}
}
//Activating.

//Deactivating (DOESN'T WORK PROPERLY).
with(listForm)
{
  if mouse_check_button_released(mb_left) &amp;&amp; clickable!=1//&amp;&amp; !gui_mouseCheckRelease(myform,mb_left)
  {
    other.listActive=0
    gui_formDestroy()
  }
}
//Deactivating.

//Form tracker.
if listActive
{
  if !instance_exists(listForm)
  {
    //Adjusting width.
    draw_set_font(GUI_FONT)
    var f_strwMin=0;
    for(var i=0; i&lt;ds_list_size(list) i+=1)
    {
      if string_width(list[|i])&gt;f_strwMin
      {f_strwMin=string_width(list[|i])}
    }
    var f_w=max(w,min(f_strwMin+GUI_SPACING*2,myform.w-x));
    //Adjusting width.
    
    //Adjusting height.
    var f_h=GUI_SPACING_4X*ds_list_size(list);
    var f_pinned_yadd=GUI_SPACING_4X;
    var f_createSlider=0;
    
    if f_h&gt;myform.h-y-GUI_SPACING_4X //If list doesn't fit inside form.
    {
      if myform.h-y-GUI_SPACING_4X&lt;y //But there's more space in the upper part.
      { 
        if f_h&gt;y //But there's still no space for full list.
        {
          f_h=y  
          f_createSlider=1
        }
        f_pinned_yadd=-f_h //Put it on top.
      }              
      else                              
      {
        f_h=myform.h-y-GUI_SPACING_4X
        f_createSlider=1
      }
      
    }
    //Adjusting height.
    
    
    gui_setDefaultForm(myform)
    gui_setDefaultSlider_v(NOSLIDER)
    gui_setDefaultSlider_h(NOSLIDER)
    listForm=gui_createForm(x,y,f_w,f_h)
    listForm.pinnedId=  id
    listForm.pinned_xadd=0
    listForm.pinned_yadd=f_pinned_yadd
    if f_createSlider
    {
      gui_setDefaultForm(listForm)
      listSlider=gui_createSlider(f_w-GUI_SPACING_4X,0,1,f_h,GUI_SPACING_4X*ds_list_size(list),0)
      gui_sliderSetWheelScrollZone(listSlider,0,0,myform.w,myform.h)
      gui_resetDefaultForm()
    } 
    gui_resetDefaultForm()
    gui_resetDefaultSlider_v()
    gui_resetDefaultSlider_h()
  } 
}
else
{
  if instance_exists(listForm)
  {gui_formDestroy(listForm)}
}
//Form tracker.
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///LIST PROCESSING

listButtonSelected=-1
listButtonPressed= -1

listSliderYadd=0
var listSliderIndent=0;
if instance_exists(listSlider)
{
  sliderIndent=GUI_SPACING_4X
  listSliderYadd=gui_sliderGet(listSlider)
}

if listActive
{
  with(listForm)
  {
    if gui_mouseCheck(id,mb_left) || gui_mouseCheckRelease(id,mb_left)
    {  
      var listL=ds_list_size(other.list);
      for(var i=0; i&lt;listL i+=1)
      {
        if point_in_rectangle(mouseForm_x-x,mouseForm_y-y,0,                 GUI_SPACING_4X*i+other.listSliderYadd,
                                                          w-listSliderIndent,GUI_SPACING_4X*(i+1)+other.listSliderYadd)
        {
          other.listButtonSelected=i
          break
        }
      }  
    }
 
    if gui_mouseCheckRelease(id,mb_left)
    {
      other.listButtonPressed=other.listButtonSelected
      other.itemSelected=other.listButtonSelected
    } 
  }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//Drawing list on form.
if listActive
{  
  draw_set_color(GUI_C_BRIGHT)
  gui_formSetTarget(listForm)
  
  for(var i=0; i&lt;ds_list_size(list) i+=1)
  {
    if listButtonSelected=i
    {
      draw_sprite_stretched_ext(s_pixel,0,0,GUI_SPACING_4X*i+listSliderYadd,listForm.w,GUI_SPACING_4X,GUI_C_BRIGHT,1)
      draw_set_color(GUI_C_DARK)
      draw_text(GUI_SPACING,round((h-GUI_FONT_SIZE)/2-1+GUI_SPACING_4X*i+listSliderYadd),list[|i])
      draw_set_color(GUI_C_BRIGHT)
    }
    else
    {draw_text(GUI_SPACING,round((h-GUI_FONT_SIZE)/2-1+GUI_SPACING_4X*i+listSliderYadd),list[|i])}
  }
  
  gui_formResetTarget(listForm)
}
//Drawing list on form.

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gui_formSetTarget(myform)

if instance_exists(listForm)
{draw_sprite_stretched_ext(s_pixel,0,listForm.x-1,listForm.y-1,listForm.w+2,listForm.h+2,GUI_C_DARK,1)}

draw_sprite_stretched_ext(s_pixel,0,x-1,y-1,w+2,h+2,GUI_C_DARK,  1)
draw_sprite_stretched_ext(s_pixel,0,x,  y,  w,  h,  GUI_C_BRIGHT,1)

draw_sprite_ext(s_gui_arrow_tiny,0,x+w-GUI_SPACING_2X*1.5,
                                   y+GUI_SPACING_2X*0.5+GUI_SPACING_2X*(1-listActive),
                                   1,1-2*(1-listActive),0,GUI_C_DARK,1)

//Text.
draw_set_color (GUI_C_DARK)
draw_set_font  (GUI_FONT)
draw_set_halign(fa_left)
draw_set_valign(fa_top)

var itemStr=stringTrimWidth(list[|max(0,itemSelected)],w-GUI_SPACING-GUI_SPACING_4X);

draw_text(round(x+GUI_SPACING),round(y+(h-GUI_FONT_SIZE)/2-1),itemStr)
//Text.

gui_formResetTarget(myform)



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
