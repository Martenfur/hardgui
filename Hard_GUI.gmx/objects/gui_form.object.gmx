<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>gui_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()

w=256
h=256

mx=0
my=0

surf=noone

pinnedId=   noone
pinned_xadd=0
pinned_yadd=GUI_SPACING_4X

/*
activity modes:
1  - fully active
0  - surface disabled, header active (for windows only)
-1 - fully disabled
*/
active=1
 
clickable=0

cBkg=GUI_C_MEDIUM

//borders
isWindow=0

headerX=x
headerY=y
headerStr="form"+string(id)

bHideEn= 0
bCloseEn=0

bHideCheck=     0
bCloseCheck=    0
bHidePressed=   0
bClosePressed=  0
bHideHighlight= 0
bCloseHighlight=0
//borders

myobjects=ds_list_create()

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//PINNED MOVEMENT

if instance_exists(pinnedId)
{
  myform=pinnedId.myform
  x=round(pinnedId.x+pinned_xadd)
  y=round(pinnedId.y+pinned_yadd)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///WINDOW ACTIONS
if isWindow
{
  cBkg=GUI_C_MEDIUM ///test
 
  //header following
  x=headerX
  y=headerY+GUI_SPACING_4X
  //header following
 
  //HIDE BUTTON
  if bHideCheck
  {
    if bHideEn
    {
      if active
      {active=0}
      else
      {active=1}
    }
    bHideCheck=0
  }
  //HIDE BUTTON
 
  //CLOSE BUTTON
  if bCloseCheck
  {
    if bCloseEn
    {gui_formDestroy()}
    bCloseCheck=0
  }
 //CLOSE BUTTON
}
else
{
  if !instance_exists(pinnedId)
  {
    if instance_exists(myslider_h)
    {x=startx-myslider_h.contentL*myslider_h.slide}
    if instance_exists(myslider_v)
    {y=starty-myslider_v.contentL*myslider_v.slide}
  }
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draw events.

var myobjectsL=ds_list_size(myobjects);
for(var ev=0; ev&lt;3 ev+=1)
{
  for(var k=0; k&lt;myobjectsL k+=1)
  {
    with(myobjects[|k])
    {
      if __eventSTEP[ev]!=NOEVENT
      {script_execute(__eventSTEP[ev])}
    }
  }
}
    
//Draw events.
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
